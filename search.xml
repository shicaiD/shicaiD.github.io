<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[链表]]></title>
      <url>https://shicaid.github.io/2016/06/20/%E9%93%BE%E8%A1%A8/</url>
      <content type="html"><![CDATA[<p>&#x8F6C;&#x8F7D;&#x8BF7;&#x6CE8;&#x660E;&#x6765;&#x6E90;&#xFF1A;<a href="https://shicaid.github.io/2016/06/20/%E9%93%BE%E8%A1%A8/">https://shicaid.github.io/2016/06/20/&#x94FE;&#x8868;/</a></p>
<blockquote>
<p>&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E3B;&#x8981;&#x5206;&#x6790;3&#x4E2A;&#x90E8;&#x5206;&#xFF1A;&#x5355;&#x5411;&#x94FE;&#x8868;&#x3001;&#x5355;&#x5411;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x548C;&#x53CC;&#x5411;&#x94FE;&#x8868;&#x3002;&#x81F3;&#x4E8E;&#x53CC;&#x5411;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x548C;&#x5355;&#x5411;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x76F8;&#x4F3C;&#xFF0C;&#x5C31;&#x4E0D;&#x63D0;&#x4E86;&#x3002;&#x5982;&#x6709;&#x66F4;&#x597D;&#x7684;&#x89C1;&#x89E3;&#xFF0C;&#x671B;&#x4E0D;&#x541D;&#x8D50;&#x6559;&#xFF01;</p>
</blockquote>
<h3>&#x94FE;&#x8868;&#x7684;&#x5B9A;&#x4E49;</h3>
<p>&#x2003;&#x2003;&#x6240;&#x8C13;<strong>&#x94FE;&#x8868;</strong>&#xFF0C;&#x5C31;&#x662F;&#x7531;&#x8BB8;&#x591A;&#x76F8;&#x540C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x5143;&#x7D20;&#x6309;&#x7167;&#x89C4;&#x5B9A;&#x987A;&#x5E8F;&#x6392;&#x5217;&#x800C;&#x6210;&#x7684;&#x7EBF;&#x6027;&#x8868;&#x3002;&#x751F;&#x6D3B;&#x4E2D;&#xFF0C;&#x50CF;&#x706B;&#x8F66;&#x5C31;&#x662F;&#x4E2A;&#x201C;&#x94FE;&#x8868;&#x201D;&#x7684;&#x5F88;&#x597D;&#x4F8B;&#x5B50;&#xFF0C;&#x4E00;&#x8282;&#x8F66;&#x53A2;&#x8FDE;&#x7740;&#x4E00;&#x8282;&#x8F66;&#x53A2;&#x3002;&#x4E0E;&#x6570;&#x7EC4;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;&#x5F53;&#x4E00;&#x4E2A;&#x94FE;&#x8868;&#x9700;&#x8981;&#x63A5;&#x5165;&#x65B0;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x5C31;&#x5411;&#x7CFB;&#x7EDF;&#x7533;&#x8BF7;&#x4E00;&#x5757;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x5206;&#x914D;&#x597D;&#x4E00;&#x5B9A;&#x7684;&#x7A7A;&#x95F4;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x94FE;&#x8868;&#x4E5F;&#x6709;&#x5176;&#x7F3A;&#x70B9;&#xFF0C;&#x5C31;&#x662F;&#x5728;&#x67E5;&#x627E;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x9700;&#x6309;&#x987A;&#x5E8F;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x627E;&#x3002;</p>
<h3>&#x5355;&#x5411;&#x94FE;&#x8868;</h3>
<p>&#x2003;&#x2003;<strong>&#x5355;&#x5411;&#x94FE;&#x8868;</strong>&#x5C31;&#x50CF;&#x706B;&#x8F66;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5934;&#xFF0C;&#x4E00;&#x4E2A;&#x5C3E;&#xFF0C;&#x65B9;&#x5411;&#x56FA;&#x5B9A;&#xFF0C;&#x6BCF;&#x4E2A;&#x8F66;&#x53A2;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x53EF;&#x4EE5;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x6BCF;&#x4E2A;&#x8F66;&#x53A2;&#x5728;&#x94FE;&#x8868;&#x4E2D;&#x79F0;&#x4E3A;&#x201C;&#x8282;&#x70B9;&#x201D;&#x3002;&#x90A3;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x6700;&#x7B80;&#x5355;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x5305;&#x62EC;&#x4E24;&#x4E2A;&#x57FA;&#x672C;&#x5B57;&#x6BB5;&#xFF1A;</p>
<table>
<thead>
<tr>
<th style="text-align:center">&#x5B57;&#x6BB5;1</th>
<th style="text-align:center">&#x5B57;&#x6BB5;2</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">&#x6570;&#x636E;&#x5B57;&#x6BB5;&#xFF08;&#x8282;&#x70B9;&#x7684;&#x6570;&#x636E;&#xFF09;</td>
<td style="text-align:center">&#x94FE;&#x63A5;&#x5B57;&#x6BB5;&#xFF08;&#x6307;&#x5411;&#x540E;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF09;</td>
</tr>
</tbody>
</table>
<ul>
<li>&#x5355;&#x5411;&#x94FE;&#x8868;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;</li>
</ul>
<p><img src="/2016/06/20/&#x94FE;&#x8868;/./singly.jpg" alt="&#x5355;&#x5411;&#x94FE;&#x8868;"></p>
<ul>
<li>&#x63D2;&#x5165;&#x8282;&#x70B9;&#xFF1A;</li>
</ul>
<p><img src="/2016/06/20/&#x94FE;&#x8868;/./insertSingly.jpg" alt="&#x5355;&#x5411;&#x94FE;&#x8868;-&#x63D2;&#x5165;&#x8282;&#x70B9;"></p>
<ul>
<li>&#x5220;&#x9664;&#x8282;&#x70B9;&#xFF1A;</li>
</ul>
<p><img src="/2016/06/20/&#x94FE;&#x8868;/./deleteSingly.jpg" alt="&#x5355;&#x5411;&#x94FE;&#x8868;-&#x5220;&#x9664;&#x8282;&#x70B9;">
&#x5728;java&#x4E2D;&#x5B9E;&#x73B0;&#x6B64;&#x94FE;&#x8868;&#x4E5F;&#x7B80;&#x5355;</p>
<ul>
<li><strong>&#x8282;&#x70B9;</strong></li>
</ul>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SinglyNode</span></span>{	</span><br><span class="line">	<span class="keyword">public</span> String data; <span class="comment">//&#x8282;&#x70B9;&#x6570;&#x636E;</span></span><br><span class="line">	<span class="keyword">public</span> SinglyNode next; <span class="comment">//&#x4E0B;&#x4E00;&#x4E2A;&#x8282;&#x70B9;</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SinglyNode</span><span class="params">(String data)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        <span class="keyword">this</span>.next = <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<ul>
<li><strong>&#x94FE;&#x8868;</strong></li>
</ul>
<p>&#x2003;&#x2003;&#x8BE5;&#x7C7B;&#x7533;&#x660E;&#x4E86;&#x4EE5;&#x4E0B;&#x65B9;&#x6CD5;&#xFF1A;</p>
<table>
<thead>
<tr>
<th style="text-align:center">&#x65B9;&#x6CD5;&#x540D;&#x79F0;</th>
<th style="text-align:center">&#x529F;&#x80FD;&#x8BF4;&#x660E;</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">public SinlyLinkedList copy()</td>
<td style="text-align:center">&#x62F7;&#x8D1D;&#x5F53;&#x524D;&#x94FE;&#x8868;&#x7684;&#x6240;&#x6709;&#x4FE1;&#x606F;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x94FE;&#x8868;</td>
</tr>
<tr>
<td style="text-align:center">public boolean isEmpty()</td>
<td style="text-align:center">&#x5F53;&#x524D;&#x94FE;&#x8868;&#x662F;&#x5426;&#x4E3A;&#x7A7A;&#xFF0C;&#x53CA;&#x662F;&#x5426;&#x6709;&#x8282;&#x70B9;</td>
</tr>
<tr>
<td style="text-align:center">public void print()</td>
<td style="text-align:center">&#x6253;&#x5370;&#x5F53;&#x524D;&#x94FE;&#x8868;&#x7684;&#x4FE1;&#x606F;</td>
</tr>
<tr>
<td style="text-align:center">public int length()</td>
<td style="text-align:center">&#x5F53;&#x524D;&#x94FE;&#x8868;&#x957F;&#x5EA6;&#xFF0C;&#x53CA;&#x8282;&#x70B9;&#x6570;</td>
</tr>
<tr>
<td style="text-align:center">public  boolean insert(int where,String data)</td>
<td style="text-align:center">&#x5728;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x63D2;&#x5165;&#x8282;&#x70B9;</td>
</tr>
<tr>
<td style="text-align:center">public boolean delete(int where)</td>
<td style="text-align:center">&#x5220;&#x9664;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x7684;&#x8282;&#x70B9;</td>
</tr>
</tbody>
</table>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SinglyLinkedList</span></span>{</span><br><span class="line">	<span class="keyword">public</span> SinglyNode head; <span class="comment">//&#x5934;&#x8282;&#x70B9;</span></span><br><span class="line">    <span class="keyword">public</span> SinglyNode trail;  <span class="comment">//&#x5C3E;&#x8282;&#x70B9;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size = <span class="number">0</span>; <span class="comment">//&#x94FE;&#x8868;&#x957F;&#x5EA6;(&#x8282;&#x70B9;&#x6570;)</span></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@return</span></span><br><span class="line">     *  &#x590D;&#x5236;&#xFF0C;&#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x94FE;&#x8868;</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SinglyLinkedList <span class="title">copy</span><span class="params">()</span></span>{</span><br><span class="line">        SinglyLinkedList result = <span class="keyword">new</span> SinglyLinkedList();</span><br><span class="line">        SinglyNode temp = head;</span><br><span class="line">        <span class="keyword">while</span> (temp!=<span class="keyword">null</span>){</span><br><span class="line">            result.insert(length()-<span class="number">1</span>,temp.data);</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * &#x5224;&#x7A7A;</span><br><span class="line">     * <span class="doctag">@return</span></span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">return</span> size == <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * &#x6253;&#x5370;&#x94FE;&#x8868;</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()){</span><br><span class="line">            System.out.println(<span class="string">&quot;&#x94FE;&#x8868;&#x4E3A;&#x7A7A;&#xFF01;&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        SinglyNode node = head;</span><br><span class="line">       <span class="comment">//&#x4ECE;&#x5934;&#x8282;&#x70B9;&#x5F00;&#x59CB;&#x904D;&#x5386;</span></span><br><span class="line">        <span class="keyword">while</span> (node != <span class="keyword">null</span>){</span><br><span class="line">            System.out.print(node.data);</span><br><span class="line">            node = node.next;</span><br><span class="line">            <span class="keyword">if</span> (node != <span class="keyword">null</span>){</span><br><span class="line">                System.out.print(<span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        System.out.println();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">length</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * &#x5728;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x7684;&#x63D2;&#x5165;&#x8282;&#x70B9;</span><br><span class="line">     * <span class="doctag">@param</span> where &#x6307;&#x5B9A;&#x4F4D;&#x7F6E; &#xFF08;-1 ---&#x5934;&#x8282;&#x70B9;&#xFF09;</span><br><span class="line">     * <span class="doctag">@param</span> data &#x503C;</span><br><span class="line">     * <span class="doctag">@return</span> &#x63D2;&#x5165;&#x6210;&#x529F;&#x4E0E;&#x5426;</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> where,String data)</span></span>{</span><br><span class="line">        <span class="keyword">if</span> (where &lt; -<span class="number">1</span> || where &gt;= length()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        SinglyNode newNode = <span class="keyword">new</span> SinglyNode(data);</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()){ <span class="comment">//&#x82E5;&#x94FE;&#x8868;&#x4E3A;&#x7A7A;</span></span><br><span class="line">            head = newNode;</span><br><span class="line">            trail = newNode;</span><br><span class="line">        }<span class="keyword">else</span> { <span class="comment">//&#x94FE;&#x8868;&#x4E0D;&#x4E3A;&#x7A7A;</span></span><br><span class="line">            <span class="keyword">if</span> (where == -<span class="number">1</span>){ <span class="comment">//&#x63D2;&#x5165;&#x5934;&#x8282;&#x70B9;</span></span><br><span class="line">                newNode.next = head;</span><br><span class="line">                head = newNode;</span><br><span class="line">            }<span class="keyword">else</span> { </span><br><span class="line">                SinglyNode n = head;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; where; i++) {</span><br><span class="line">                    n = n.next;</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//&#x627E;&#x5230;&#x5230;&#x9700;&#x8981;&#x5728;&#x4F4D;&#x7F6E;where&#x63D2;&#x5165;&#x8282;&#x70B9;&#x7684;&#x524D;&#x4E00;&#x4E2A;&#x8282;&#x70B9;n</span></span><br><span class="line">                newNode.next = n.next;</span><br><span class="line">                n.next = newNode;</span><br><span class="line">                <span class="keyword">if</span> (newNode.next == <span class="keyword">null</span>) {</span><br><span class="line">                    trail = newNode;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        size++;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * &#x5220;&#x9664;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x7684;&#x8282;&#x70B9;</span><br><span class="line">     * <span class="doctag">@param</span> where &#x6307;&#x5B9A;&#x4F4D;&#x7F6E; &#xFF08;0--&#x5934;&#x8282;&#x70B9;&#xFF09;</span><br><span class="line">     * <span class="doctag">@return</span> &#x5220;&#x9664;&#x6210;&#x529F;&#x4E0E;&#x5426;</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> where)</span></span>{</span><br><span class="line">        <span class="keyword">if</span> (isEmpty() || where&lt;<span class="number">0</span> || where &gt;= length()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        SinglyNode n = head;</span><br><span class="line">        <span class="keyword">if</span> (where == <span class="number">0</span>){ <span class="comment">//&#x5982;&#x679C;&#x5F85;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;&#x662F;&#x5934;&#x8282;&#x70B9;</span></span><br><span class="line">            head = head.next;</span><br><span class="line">            n.next = <span class="keyword">null</span>;</span><br><span class="line">            n.data = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        }<span class="keyword">else</span> {</span><br><span class="line">            <span class="comment">//&#x8FD9;&#x91CC;&#x5FAA;&#x73AF;&#x5B9A;&#x4F4D;&#x5230;&#x5F85;&#x5220;&#x9664;&#x8282;&#x70B9;delNode&#x7684;&#x524D;&#x4E00;&#x4E2A;&#x8282;&#x70B9;n</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; where - <span class="number">1</span>; i++) {</span><br><span class="line">                n = n.next;</span><br><span class="line">            }</span><br><span class="line">            SinglyNode delNode = n.next;<span class="comment">//&#x5F85;&#x5220;&#x9664;&#x8282;&#x70B9;</span></span><br><span class="line">            n.next = delNode.next;</span><br><span class="line">            <span class="keyword">if</span> (delNode.next == <span class="keyword">null</span>) { <span class="comment">//&#x5982;&#x679C;&#x5F85;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;&#x662F;&#x5C3E;&#x8282;&#x70B9;</span></span><br><span class="line">                trail = n;</span><br><span class="line">            }</span><br><span class="line">            delNode.next = <span class="keyword">null</span>;</span><br><span class="line">            delNode.data = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        }</span><br><span class="line">        size--;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h4>&#x5355;&#x5411;&#x94FE;&#x8868;&#x7684;&#x76F8;&#x5173;&#x64CD;&#x4F5C;</h4>
<ul>
<li><strong>&#x53CD;&#x8F6C;</strong></li>
</ul>
<p>&#x2003;&#x2003;<strong>&#x53CD;&#x8F6C;</strong>&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x539F;&#x94FE;&#x8868;&#x7684;&#x5934;&#x53D8;&#x6210;&#x5C3E;&#xFF0C;&#x5C3E;&#x53D8;&#x6210;&#x5934;&#x3002;&#x6BD4;&#x5982;&#x4E00;&#x4E2A;&#x94FE;&#x8868;a-&gt;b-&gt;c-&gt;d&#xFF0C;&#x53CD;&#x8F6C;&#x540E;&#x5C31;&#x662F;d-&gt;c-&gt;b-&gt;a&#x3002;
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * &#x5355;&#x5411;&#x94FE;&#x8868;&#x53CD;&#x8F6C;</span><br><span class="line"> * <span class="doctag">@param</span> linkedList</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">reverse</span><span class="params">(SinglyLinkedList linkedList)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (linkedList==<span class="keyword">null</span> || linkedList.isEmpty()) {</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    SinglyNode current = linkedList.head; <span class="comment">//&#x7528;&#x4F5C;&#x4E8E;&#x6307;&#x9488;&#xFF0C;&#x4E0D;&#x65AD;&#x5411;&#x540E;&#x79FB;&#xFF0C;&#x76F4;&#x81F3;&#x4E3A;null</span></span><br><span class="line">    SinglyNode before = <span class="keyword">null</span>; <span class="comment">//&#x6307;&#x9488;&#x79FB;&#x52A8;&#x524D;&#x7684;&#x8282;&#x70B9;</span></span><br><span class="line">    SinglyNode temp = <span class="keyword">null</span>; <span class="comment">//&#x4E2D;&#x95F4;&#x8282;&#x70B9;&#xFF0C;&#x7528;&#x4E8E;&#x6682;&#x65F6;&#x4FDD;&#x5B58;before&#x8282;&#x70B9;</span></span><br><span class="line">    linkedList.trail = current; <span class="comment">//&#x65E2;&#x7136;&#x53CD;&#x8F6C;&#x4E86;&#xFF0C;&#x94FE;&#x8868;&#x7684;&#x5C3E;&#x6307;&#x9488;&#x5C31;&#x5E94;&#x8BE5;&#x6307;&#x5411;&#x539F;&#x94FE;&#x8868;&#x5934;&#x8282;&#x70B9;</span></span><br><span class="line">    <span class="keyword">while</span> (current != <span class="keyword">null</span>) {<span class="comment">//&#x53CD;&#x8F6C;&#x64CD;&#x4F5C;</span></span><br><span class="line">        temp = before;</span><br><span class="line">        before = current;</span><br><span class="line">        current = current.next;<span class="comment">//&#x540E;&#x79FB;&#x4E00;&#x8282;&#x70B9;</span></span><br><span class="line">        before.next = temp;</span><br><span class="line">    }</span><br><span class="line">    linkedList.head = before; <span class="comment">//&#x94FE;&#x8868;&#x5934;&#x6307;&#x9488;&#x6307;&#x5411;&#x539F;&#x94FE;&#x8868;&#x5C3E;&#x8282;&#x70B9;</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<ul>
<li><strong>&#x4E32;&#x8054;</strong></li>
</ul>
<p>&#x2003;&#x2003;<strong>&#x4E32;&#x8054;</strong>&#xFF0C;&#x5C31;&#x662F;&#x628A;&#x82E5;&#x5E72;&#x4E2A;&#x94FE;&#x8868;&#x4E32;&#x6210;&#x4EE5;&#x4E2A;&#x94FE;&#x8868;&#x3002;&#x5B9E;&#x73B0;&#x8D77;&#x6765;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#xFF0C;&#x53EA;&#x9700;&#x524D;&#x4E00;&#x4E2A;&#x94FE;&#x8868;&#x7684;&#x5C3E;&#x8282;&#x70B9;&#x6307;&#x5411;&#x540E;&#x4E00;&#x4E2A;&#x94FE;&#x8868;&#x7684;&#x5934;&#x8282;&#x70B9;&#x5C31;&#x884C;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x589E;&#x52A0;&#x7BC7;&#x5E45;&#x4E86;&#x3002;</p>
<h3>&#x5355;&#x5411;&#x73AF;&#x5F62;&#x94FE;&#x8868;</h3>
<p>&#x2003;&#x2003;&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;&#x5355;&#x5411;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x81EA;&#x8EAB;&#x7684;&#x5C3E;&#x8282;&#x70B9;&#x6307;&#x5411;&#x81EA;&#x8EAB;&#x7684;&#x5934;&#x8282;&#x70B9;&#xFF0C;&#x5F62;&#x6210;&#x4E00;&#x4E2A;&#x73AF;&#x5F62;&#x7ED3;&#x6784;&#xFF0C;&#x5176;&#x7279;&#x70B9;&#x662F;&#x5728;&#x94FE;&#x8868;&#x4E0A;&#x7684;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x90FD;&#x53EF;&#x8FBE;&#x5230;&#x6B64;&#x94FE;&#x8868;&#x5185;&#x7684;&#x5404;&#x4E2A;&#x8282;&#x70B9;&#x3002;&#x867D;&#x7136;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x4E0D;&#x5B58;&#x5728;&#x5934;&#x8282;&#x70B9;&#x548C;&#x5C3E;&#x8282;&#x70B9;&#xFF0C;&#x4F46;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x662F;&#x9009;&#x62E9;&#x4E86;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x5934;&#x8282;&#x70B9;&#x548C;&#x5C3E;&#x8282;&#x70B9;&#x3002;</p>
<p><img src="/2016/06/20/&#x94FE;&#x8868;/./circular.jpg" alt="&#x5355;&#x5411;&#x73AF;&#x5F62;&#x94FE;&#x8868;"></p>
<p>&#x2003;&#x2003;&#x5355;&#x5411;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x548C;&#x5355;&#x5411;&#x94FE;&#x8868;&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#xFF0C;&#x76F8;&#x4F3C;&#x5230;&#x63D2;&#x5165;&#x548C;&#x5220;&#x9664;&#x53EA;&#x9700;&#x8003;&#x8651;&#x5728;&#x5C3E;&#x8282;&#x70B9;&#x548C;&#x5934;&#x8282;&#x70B9;&#x7684;&#x7279;&#x6B8A;&#x60C5;&#x51B5;&#x5916;&#xFF0C;&#x5176;&#x4ED6;&#x4E00;&#x5F8B;&#x76F8;&#x540C;&#x3002;</p>
<ul>
<li><strong>&#x63D2;&#x5165;&#x8282;&#x70B9;</strong></li>
</ul>
<p>&#x2003;&#x2003;&#x5F53;&#x5411;&#x5C3E;&#x8282;&#x70B9;&#x540E;&#x63D2;&#x5165;&#x65B0;&#x8282;&#x70B9;&#xFF0C;&#x65B0;&#x8282;&#x70B9;&#x5219;&#x6210;&#x4E3A;&#x4E86;&#x65B0;&#x94FE;&#x8868;&#x7684;&#x5C3E;&#x8282;&#x70B9;&#xFF0C;&#x540C;&#x65F6;&#x6307;&#x5411;&#x5934;&#x8282;&#x70B9;&#x3002;&#x63D2;&#x5165;&#x8282;&#x70B9;&#x7684;&#x4EE3;&#x7801;&#x548C;&#x5355;&#x5411;&#x94FE;&#x8868;&#x7684;&#x5927;&#x81F4;&#x4E00;&#x6837;&#xFF0C;&#x53EA;&#x9700;&#x4FEE;&#x6539;&#x4E24;&#x5904;&#x5373;&#x53EF;&#xFF1A;</p>
<blockquote>
<ul>
<li><code>~~if (newNode.next == null)~~</code>&#x6539;&#x4E3A; <code>if (newNode.next == head)</code></li>
<li>&#x5728; <code>if (where == -1){ //&#x63D2;&#x5165;&#x5934;&#x8282;&#x70B9;</code> &#x540E;&#x52A0;&#x4E00;&#x53E5; <code>trail.next = newNode;</code></li>
</ul>
</blockquote>
<ul>
<li><strong>&#x5220;&#x9664;&#x8282;&#x70B9;</strong></li>
</ul>
<p>&#x2003;&#x2003;&#x540C;&#x6837;&#xFF0C;&#x5220;&#x9664;&#x8282;&#x70B9;&#x4E0E;&#x63D2;&#x5165;&#x8282;&#x70B9;&#x4E00;&#x6837;&#xFF0C;&#x53EA;&#x9700;&#x591A;&#x8003;&#x8651;&#x4E0B;&#x5934;&#x5C3E;&#x8282;&#x70B9;&#xFF0C;&#x5176;&#x4ED6;&#x4E0E;&#x5355;&#x5411;&#x94FE;&#x8868;&#x4E00;&#x6837;&#xFF0C;&#x540C;&#x6837;&#x53EA;&#x9700;&#x4FEE;&#x6539;&#x4E24;&#x5904;&#xFF1A;</p>
<blockquote>
<ul>
<li><code>if (where == 0){ //&#x5982;&#x679C;&#x5F85;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;&#x662F;&#x5934;&#x8282;&#x70B9;</code>&#x540E;&#x52A0;&#x4E00;&#x53E5;<code>trail.next = head.next;</code></li>
<li><code>if (delNode.next == null) { //&#x5982;&#x679C;&#x5F85;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;&#x662F;&#x5C3E;&#x8282;&#x70B9;</code>&#x6539;&#x4E3A;<code>if (delNode.next == head) { //&#x5982;&#x679C;&#x5F85;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;&#x662F;&#x5C3E;&#x8282;&#x70B9;</code></li>
</ul>
</blockquote>
<h3>&#x53CC;&#x5411;&#x94FE;&#x8868;</h3>
<p>&#x2003;&#x2003;&#x5728;&#x5355;&#x5411;&#x94FE;&#x8868;&#x6216;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x4E2D;&#xFF0C;&#x53EA;&#x80FD;&#x6CBF;&#x7740;&#x540C;&#x4E00;&#x4E2A;&#x65B9;&#x5411;&#x67E5;&#x627E;&#x6570;&#x636E;&#xFF0C;&#x800C;&#x4E14;&#x5982;&#x679C;&#x4E00;&#x4E0D;&#x5C0F;&#x5FC3;&#x6709;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x65AD;&#x88C2;&#xFF0C;&#x5219;&#x6B64;&#x8282;&#x70B9;&#x540E;&#x9762;&#x7684;&#x94FE;&#x8868;&#x5C31;&#x4F1A;&#x6D88;&#x5931;&#x800C;&#x65E0;&#x6CD5;&#x633D;&#x6551;&#x3002;<strong>&#x53CC;&#x5411;&#x94FE;&#x8868;</strong>&#x53EF;&#x4EE5;&#x6539;&#x5584;&#x8FD9;&#x4E24;&#x4E2A;&#x7F3A;&#x70B9;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4E0D;&#x4EC5;&#x6709;&#x5411;&#x540E;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x8FD8;&#x6709;&#x5411;&#x524D;&#x7684;&#x6307;&#x9488;&#x3002;</p>
<table>
<thead>
<tr>
<th style="text-align:center">&#x5B57;&#x6BB5;1</th>
<th style="text-align:center">&#x5B57;&#x6BB5;2</th>
<th style="text-align:center">&#x5B57;&#x6BB5;3</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">&#x94FE;&#x63A5;&#x5B57;&#x6BB5;&#xFF08;&#x6307;&#x5411;&#x524D;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF09;</td>
<td style="text-align:center">&#x6570;&#x636E;&#x5B57;&#x6BB5;&#xFF08;&#x8282;&#x70B9;&#x7684;&#x6570;&#x636E;&#xFF09;</td>
<td style="text-align:center">&#x94FE;&#x63A5;&#x5B57;&#x6BB5;&#xFF08;&#x6307;&#x5411;&#x540E;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF09;</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>&#x53CC;&#x5411;&#x94FE;&#x8868;&#x7684;&#x7ED3;&#x6784;&#x56FE;&#x7B80;&#x5355;&#x4E3A;&#xFF1A;</strong></li>
</ul>
<p><img src="/2016/06/20/&#x94FE;&#x8868;/./double.jpg" alt="&#x53CC;&#x5411;&#x94FE;&#x8868;">
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubleNode</span></span>{</span><br><span class="line">    DoubleNode front;</span><br><span class="line">    String data;</span><br><span class="line">    DoubleNode next;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DoubleNode</span><span class="params">(String data)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        front = <span class="keyword">null</span>;</span><br><span class="line">        next = <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<ul>
<li><strong>&#x63D2;&#x5165;&#x8282;&#x70B9;</strong></li>
</ul>
<p><img src="/2016/06/20/&#x94FE;&#x8868;/./insertDouble.jpg" alt="&#x53CC;&#x5411;&#x94FE;&#x8868;-&#x63D2;&#x5165;&#x8282;&#x70B9;">
&#x4E0B;&#x9762;&#x53EA;&#x7ED9;&#x51FA;&#x76F8;&#x5E94;&#x65B9;&#x6CD5;&#xFF1A;
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> *  &#x63D2;&#x5165;&#x8282;&#x70B9;</span><br><span class="line"> * <span class="doctag">@param</span> where &#x6307;&#x5B9A;&#x4F4D;&#x7F6E; &#xFF08;-1 ---&#x63D2;&#x5165;&#x5934;&#x8282;&#x70B9;,0----&#x5934;&#x8282;&#x70B9;&#x540E;&#x63D2;&#x5165;&#x8282;&#x70B9;&#xFF09;</span><br><span class="line"> * <span class="doctag">@param</span> data &#x503C;</span><br><span class="line"> * <span class="doctag">@return</span> &#x63D2;&#x5165;&#x6210;&#x529F;&#x4E0E;&#x5426;</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> where, String data)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (where &lt; -<span class="number">1</span> || where &gt;= length() ) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    DoubleNode newNode = <span class="keyword">new</span> DoubleNode(data);</span><br><span class="line">    <span class="keyword">if</span> (isEmpty()){</span><br><span class="line">        head = newNode; <span class="comment">//&#x94FE;&#x8868;&#x5934;&#x6307;&#x9488;</span></span><br><span class="line">        trail = newNode; <span class="comment">//&#x94FE;&#x8868;&#x5C3E;&#x6307;&#x9488;</span></span><br><span class="line">    }<span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">if</span> (where == -<span class="number">1</span>) { <span class="comment">//&#x63D2;&#x5165;&#x5934;&#x8282;&#x70B9;</span></span><br><span class="line">            newNode.next = head;</span><br><span class="line">            head.front = newNode;</span><br><span class="line">            head = newNode;</span><br><span class="line">        } <span class="keyword">else</span> { <span class="comment">//&#x63D2;&#x5165;&#x5230;&#x5176;&#x4ED6;&#x4F4D;&#x7F6E;</span></span><br><span class="line">            DoubleNode temp = head;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; where; i++) {</span><br><span class="line">                temp = temp.next; <span class="comment">//&#x627E;&#x5230;&#x63D2;&#x5165;&#x4F4D;&#x7F6E;&#x7684;&#x524D;&#x4E00;&#x4E2A;&#x8282;&#x70B9;</span></span><br><span class="line">            }</span><br><span class="line">            DoubleNode tempNext = temp.next; <span class="comment">//&#x8BB0;&#x5F55;&#x63D2;&#x5165;&#x4F4D;&#x7F6E;&#x7684;&#x540E;&#x4E00;&#x4E2A;&#x8282;&#x70B9;</span></span><br><span class="line">            <span class="comment">//&#x5F00;&#x59CB;&#x5728;temp&#x548C;tempNext&#x95F4;&#x63D2;&#x5165;newNode</span></span><br><span class="line">            <span class="keyword">if</span> (tempNext == <span class="keyword">null</span>) { <span class="comment">//&#x82E5;&#x63D2;&#x5165;&#x5730;&#x65B9;&#x662F;&#x5C3E;&#x8282;&#x70B9;&#x540E;</span></span><br><span class="line">                temp.next = newNode;</span><br><span class="line">                newNode.front = temp;</span><br><span class="line">                trail = newNode;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                newNode.next = tempNext;<span class="comment">//&#x5373;&#x5982;&#x4E0A;&#x56FE;:i.next = c</span></span><br><span class="line">                tempNext.front = newNode;<span class="comment">//c.front = i;</span></span><br><span class="line">                newNode.front = temp; <span class="comment">//i.front = b;</span></span><br><span class="line">                temp.next = newNode; <span class="comment">//b.next = i;</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    size++;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<ul>
<li><strong>&#x5220;&#x9664;&#x8282;&#x70B9;</strong></li>
</ul>
<p><img src="/2016/06/20/&#x94FE;&#x8868;/./deleteDouble.jpg" alt="&#x53CC;&#x5411;&#x94FE;&#x8868;-&#x5220;&#x9664;&#x8282;&#x70B9;">
&#x4E0B;&#x9762;&#x53EA;&#x7ED9;&#x51FA;&#x76F8;&#x5E94;&#x65B9;&#x6CD5;&#xFF1A;
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * &#x5220;&#x9664;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x7684;&#x8282;&#x70B9;</span><br><span class="line"> * <span class="doctag">@param</span> where &#x6307;&#x5B9A;&#x4F4D;&#x7F6E; &#xFF08;0--&#x5934;&#x8282;&#x70B9;&#xFF09;</span><br><span class="line"> * <span class="doctag">@return</span> &#x5220;&#x9664;&#x6210;&#x529F;&#x4E0E;&#x5426;</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> where)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (isEmpty() || where&lt;<span class="number">0</span> || where&gt;=length()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (where == <span class="number">0</span>){ <span class="comment">//&#x82E5;&#x5F85;&#x5220;&#x9664;&#x7684;&#x662F;&#x5934;&#x8282;&#x70B9;</span></span><br><span class="line">        <span class="keyword">if</span> (length() == <span class="number">1</span>){ <span class="comment">//&#x82E5;&#x94FE;&#x8868;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x8282;&#x70B9;</span></span><br><span class="line">            head = <span class="keyword">null</span>;</span><br><span class="line">            trail = <span class="keyword">null</span>;</span><br><span class="line">        }<span class="keyword">else</span> {</span><br><span class="line">            head = head.next;</span><br><span class="line">            head.front = <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">    }<span class="keyword">else</span> <span class="keyword">if</span> (where == length()-<span class="number">1</span>){ <span class="comment">//&#x82E5;&#x5F85;&#x5220;&#x9664;&#x7684;&#x662F;&#x5C3E;&#x8282;&#x70B9;</span></span><br><span class="line">        trail = trail.front;</span><br><span class="line">        trail.next = <span class="keyword">null</span>;</span><br><span class="line">    }<span class="keyword">else</span> {</span><br><span class="line">        DoubleNode toDel = head;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; where; i++) {</span><br><span class="line">            toDel = toDel.next;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x627E;&#x5230;&#x5F85;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;toDel&#xFF0C;&#x6B63;&#x5982;&#x4E0A;&#x56FE;c&#x8282;&#x70B9;</span></span><br><span class="line">        toDel.front.next = toDel.next;<span class="comment">//&#x5373;&#x5982;&#x4E0A;&#x56FE;:b.next = d;</span></span><br><span class="line">        toDel.next.front = toDel.front;<span class="comment">//&#x5373;&#x5982;&#x4E0A;&#x56FE;:d.front = b;</span></span><br><span class="line">        toDel.front = <span class="keyword">null</span>;</span><br><span class="line">        toDel.next = <span class="keyword">null</span>;</span><br><span class="line">        toDel.data = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">    size--;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x2003;&#x2003;&#x5173;&#x4E8E;&#x94FE;&#x8868;&#x7684;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#x603B;&#x7ED3;&#x5C31;&#x6682;&#x65F6;&#x5230;&#x6B64;&#xFF0C;&#x6709;&#x4EC0;&#x4E48;&#x7591;&#x95EE;&#x53EF;&#x4EE5;&#x5728;&#x4E0B;&#x9762;&#x7559;&#x8A00;&#xFF0C;&#x6211;&#x4F1A;&#x5C3D;&#x6211;&#x6700;&#x5927;&#x52AA;&#x529B;&#x5E2E;&#x4F60;&#x89E3;&#x7B54;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x6709;&#x66F4;&#x597D;&#x7684;&#x5EFA;&#x8BAE;&#x5341;&#x5206;&#x6B22;&#x8FCE;&#x63D0;&#x51FA;&#xFF01;ps.&#x6700;&#x8FD1;&#x5404;&#x79CD;&#x7E41;&#x7410;&#x4E8B;&#x60C5;&#xFF0C;&#x5BFC;&#x81F4;&#x4E0E;&#x4E0A;&#x4E00;&#x7BC7;&#x76F8;&#x9694;&#x8FD9;&#x4E48;&#x4E45;( &#x256F;&#x25A1;&#x2570; )&#xFF0C;&#x6211;&#x4F1A;&#x52AA;&#x529B;&#x575A;&#x6301;&#x4E0B;&#x53BB;&#x7684;&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[数组结构]]></title>
      <url>https://shicaid.github.io/2016/06/01/%E6%95%B0%E7%BB%84%E7%BB%93%E6%9E%84/</url>
      <content type="html"><![CDATA[<p>&#x8F6C;&#x8F7D;&#x8BF7;&#x6CE8;&#x660E;&#x6765;&#x6E90;&#xFF1A;<a href="http://shicaid.github.io/2016/06/01/%E6%95%B0%E7%BB%84%E7%BB%93%E6%9E%84/">http://shicaid.github.io/2016/06/01/&#x6570;&#x7EC4;&#x7ED3;&#x6784;/</a></p>
<blockquote>
<p>&#x6B64;&#x7BC7;&#x6587;&#x7AE0;&#x4E3B;&#x8981;&#x4EE5;&#x77E9;&#x9635;&#x7684;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#x6765;&#x4ECB;&#x7ECD;&#x6570;&#x7EC4;&#x7ED3;&#x6784;&#xFF0C;&#x81F3;&#x4E8E;&#x6570;&#x7EC4;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;<a href="http://blog.csdn.net/e421083458/article/details/8146236" target="_blank" rel="external">&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;</a> &#x89E3;&#x91CA;&#x7684;&#x633A;&#x597D;&#x7684;&#xFF0C;&#x5728;&#x6B64;&#x5C31;&#x4E0D;&#x8D58;&#x8FF0;&#x4E86;&#x3002;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x6B65;&#x5165;&#x6B63;&#x9898;&#x5427;&#x3002;</p>
</blockquote>
<h3>&#x77E9;&#x9635;&#x76F8;&#x52A0;</h3>
<p>&#x2003;&#x2003;&#x4EC0;&#x4E48;&#x662F;&#x77E9;&#x9635;&#x5462;&#xFF1F;&#x7B80;&#x5355;&#x8BF4;&#xFF0C;&#x77E9;&#x9635;&#x662F;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x597D;&#x65B9;&#x5F0F;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x4E00;&#x4E2A;&#x77E9;&#x9635;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x4E2A;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x3002;
&#x4F8B;&#x5982;&#xFF1A; $$A_{m*n}+B_{m*n}=C_{m*n}$$ 
&#x5373;&#xFF1A;
 $$\begin{bmatrix}1 &amp; 3 &amp; 5\\7 &amp; 9 &amp; 11\\13&amp;15&amp;17\end{bmatrix} 
\qquad+\qquad
\begin{bmatrix}2 &amp; 4 &amp; 6\\8 &amp; 10 &amp; 12\\14&amp;16&amp;18\end{bmatrix} 
\qquad=\qquad
\begin{bmatrix}3 &amp; 7 &amp; 11\\15 &amp; 19 &amp; 23\\27&amp;31&amp;35\end{bmatrix} 
$$ 
&#x5B9E;&#x73B0;&#x8D77;&#x6765;&#x5F88;&#x7B80;&#x5355;&#xFF1A;</p>
<p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="markdown">/**</span><br><span class="line"> * &#x77E9;&#x9635;&#x76F8;&#x52A0;</span><br><span class="line"> * arrA[<span class="string"></span>][<span class="symbol"></span>]&#x3001;arrB[<span class="string"></span>][<span class="symbol"></span>]&#x3001;arrResult[][]&#x5927;&#x5C0F;&#x5FC5;&#x987B;&#x76F8;&#x540C;</span><br><span class="line"> <span class="bullet">* @param arrA m*</span>n(m&#x884C;n&#x5217;,&#x4EE5;&#x4E0B;&#x5F62;&#x5982;m*n&#x7686;&#x4E3A;&#x6B64;)</span><br><span class="line"> <span class="bullet">* @param arrB m*</span>n</span><br><span class="line"> <span class="bullet">* @param arrResult &#x76F8;&#x52A0;&#x7ED3;&#x679C; m*</span>n</span><br><span class="line"> */</span></span></span><br><span class="line">public <span class="keyword">static</span> <span class="keyword">void</span> matrixAdd(<span class="built_in">int</span> arrA[][],<span class="built_in">int</span> arrB[][],<span class="built_in">int</span> arrResult[][]){</span><br><span class="line"> <span class="keyword">if</span> (arrA == <span class="keyword">null</span> || arrB == <span class="keyword">null</span> || arrResult == <span class="keyword">null</span>){</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">&quot;&#x4F20;&#x9012;&#x975E;&#x6CD5;&#x53C2;&#x6570;&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">int</span> row = arrA.length;</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">int</span> col = arrA[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">if</span> (row != arrB.length || row != arrResult.length ||</span><br><span class="line">            col != arrB[<span class="number">0</span>].length || col != arrResult[<span class="number">0</span>].length){</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;&#x77E9;&#x9635;&#x975E;&#x6CD5;&#x76F8;&#x52A0;&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; row; i++) { <span class="comment">//&#x884C;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; col; j++) { <span class="comment">//&#x5217;</span></span><br><span class="line">            arrResult[i][j] = arrA[i][j] + arrB[i][j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x6211;&#x4EEC;&#x4F20;&#x5165;&#x4EE5;&#x4E0B;&#x6570;&#x636E;</p>
<blockquote>
<p>int arrA[][] = {{1,3,5},{7,9,11},{13,15,17}};
int arrB[][] = {{2,4,6},{8,10,12},{14,16,18}};
int arrResult[][] = new int[3][3];</p>
</blockquote>
<p>&#x6253;&#x5370;&#x7ED3;&#x679C;&#xFF1A;
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x77E9;&#x9635;<span class="string">A:</span></span><br><span class="line"><span class="number">1</span> 		<span class="number">3</span> 		<span class="number">5</span> 		</span><br><span class="line"><span class="number">7</span> 		<span class="number">9</span> 		<span class="number">11</span> 		</span><br><span class="line"><span class="number">13</span> 		<span class="number">15</span> 		<span class="number">17</span> 		</span><br><span class="line">&#x77E9;&#x9635;<span class="string">B:</span></span><br><span class="line"><span class="number">2</span> 		<span class="number">4</span> 		<span class="number">6</span> 		</span><br><span class="line"><span class="number">8</span> 		<span class="number">10</span> 		<span class="number">12</span> 		</span><br><span class="line"><span class="number">14</span> 		<span class="number">16</span> 		<span class="number">18</span> 		</span><br><span class="line">&#x7ED3;&#x679C;:</span><br><span class="line"><span class="number">3</span> 		<span class="number">7</span> 		<span class="number">11</span> 		</span><br><span class="line"><span class="number">15</span> 		<span class="number">19</span> 		<span class="number">23</span> 		</span><br><span class="line"><span class="number">27</span> 		<span class="number">31</span> 		<span class="number">35</span></span><br></pre></td></tr></table></figure></p>
<h3>&#x77E9;&#x9635;&#x76F8;&#x4E58;</h3>
<p>&#x2003;&#x2003;&#x5728;&#x6211;&#x770B;&#x6765;&#xFF0C;&#x77E9;&#x9635;&#x7684;&#x76F8;&#x5173;&#x8FD0;&#x7B97;&#x4E58;&#x6CD5;&#x662F;&#x6700;&#x4E3A;&#x96BE;&#x7406;&#x89E3;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x770B;&#x770B;&#x6570;&#x5B66;&#x4E2D;&#x77E9;&#x9635;&#x662F;&#x600E;&#x6837;&#x76F8;&#x4E58;&#x7684;&#x3002;
&#x2003;&#x2003;&#x5047;&#x8BBE;&#x4E24;&#x4E2A;&#x77E9;&#x9635;A&#x548C;B&#x76F8;&#x4E58;&#xFF0C;&#x5FC5;&#x987B;&#x6EE1;&#x8DB3;&#x4E00;&#x4E2A;&#x6761;&#x4EF6;&#xFF1A;A&#x4E3A;&#x4E00;&#x4E2A;m<em>n&#x7684;&#x77E9;&#x9635;&#xFF0C;B&#x5FC5;&#x987B;&#x4E3A;&#x4E00;&#x4E2A;n</em>p&#x7684;&#x77E9;&#x9635;&#x3002;&#x90A3;&#x4E48;A<em>B&#x7684;&#x7ED3;&#x679C;&#x662F;&#x4E00;&#x4E2A;m</em>p&#x7684;&#x77E9;&#x9635;C(m,n,p&#x76F8;&#x4E92;&#x72EC;&#x7ACB;&#x4E14;&#x90FD;&gt;0)&#x3002;&#x8FD0;&#x7B97;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;

$$\begin{bmatrix}a_{11} &amp; ...... &amp; a_{1n}\\... &amp; ... &amp; ...\\a_{m1}&amp;......&amp;a_{mn}\end{bmatrix}_{m*n}
\qquad*\qquad
\begin{bmatrix}b_{11} &amp; ...... &amp; b_{1p}\\... &amp; ... &amp; ...\\b_{n1}&amp;......&amp;b_{np}\end{bmatrix}_{n*p}
\qquad=\qquad
\begin{bmatrix}c_{11} &amp; ...... &amp; c_{1p}\\... &amp; ... &amp; ...\\c_{m1}&amp;......&amp;c_{mp}\end{bmatrix}_{m*p}
$$

$c_{11}$&#x7684;&#x7ED3;&#x679C;&#x662F;&#x53D6;&#x77E9;&#x9635;A&#x7684;&#x7B2C;1&#x884C;&#x5143;&#x7D20;&#x4F9D;&#x6B21;&#x548C;&#x77E9;&#x9635;B&#x7684;&#x7B2C;1&#x5217;&#x5143;&#x7D20;&#x76F8;&#x4E58;&#x4E4B;&#x548C;&#xFF0C;$c_{ij}$&#x7684;&#x5750;&#x6807;&#x662F;(&#x53D6;A&#x7684;&#x7B2C;i&#x884C;)(&#x53D6;B&#x7684;&#x7B2C;j&#x5217;)&#x6240;&#x5F97;
$c_{11} = a_{11}*b_{11}+a_{12}*b_{21}+a_{13}*b_{31}+...+a_{1n}*b_{n1}$
$\vdots $
$c_{ij} = a_{i1}*b_{1j}+a_{i2}*b_{2j}+a_{i3}*b_{3j}+...+a_{in}*b_{nj}$
$\vdots $
$c_{mp} = a_{m1}*b_{1p}+a_{m2}*b_{2p}+a_{m3}*b_{3p}+...+a_{mn}*b_{np}$
&#x591A;&#x7EC3;&#x4E60;&#x51E0;&#x904D;&#x5C31;&#x80FD;&#x7406;&#x89E3;&#x4E86;&#xFF0C;&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x7528;&#x4EE3;&#x7801;&#x6765;&#x5B9E;&#x73B0;&#xFF1A;
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * &#x77E9;&#x9635;&#x76F8;&#x4E58;</span><br><span class="line"> * <span class="doctag">@param</span> arrA m*n</span><br><span class="line"> * <span class="doctag">@param</span> arrB n*p</span><br><span class="line"> * <span class="doctag">@param</span> arrResult m*p</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">void</span> <span class="title">matrixPuls</span><span class="params">(<span class="keyword">int</span> arrA[][],<span class="keyword">int</span> arrB[][],<span class="keyword">int</span> arrResult[][])</span></span>{</span><br><span class="line"> <span class="keyword">if</span> (arrA == <span class="keyword">null</span> || arrB == <span class="keyword">null</span> || arrResult == <span class="keyword">null</span>){</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">&quot;&#x4F20;&#x9012;&#x975E;&#x6CD5;&#x53C2;&#x6570;&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> m = arrA.length;<span class="comment">//arrA&#x884C;&#x6570;&#x4E5F;&#x662F;arrResult&#x884C;&#x6570;</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> n = arrB.length;<span class="comment">//arrB&#x884C;&#x6570;&#x4E5F;&#x662F;arrA&#x5217;&#x6570;</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> p = arrB[<span class="number">0</span>].length;<span class="comment">//arrB&#x5217;&#x6570;&#x4E5F;&#x662F;arrResult&#x5217;&#x6570;</span></span><br><span class="line">    <span class="keyword">if</span> (m != arrResult.length || n != arrA[<span class="number">0</span>].length || p != arrResult[<span class="number">0</span>].length){</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;&#x77E9;&#x9635;&#x975E;&#x6CD5;&#x76F8;&#x4E58;&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//&#x4E34;&#x65F6;&#x50A8;&#x5B58;&#x8BA1;&#x7B97;&#x540E;&#x7684;&#x6BCF;&#x4E00;&#x884C;&#x7684;&#x6570;&#x636E;</span></span><br><span class="line">    <span class="keyword">int</span> resultRow[] = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) { <span class="comment">//arrA&#x7684;&#x884C;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) { <span class="comment">// &#x521D;&#x59CB;&#x5316;resultRow&#x7684;&#x503C;</span></span><br><span class="line">            resultRow[j] = <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; p; k++) {  <span class="comment">//arrB&#x7684;&#x5217;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) { <span class="comment">//arrA &#x7684;&#x5217;</span></span><br><span class="line">                resultRow[k] += arrA[i][j] * arrB[j][k];<span class="comment">//arrB[j][k]&#x8FD9;&#x91CC;&#x8981;&#x4E3A;k&#x4E0D;&#x80FD;&#x662F;i&#xFF0C;&#x56E0;&#x4E3A;&#x4E0E;arrA[i]&#x884C;&#x6570;&#x7EC4;&#x76F8;&#x4E58;&#x7684;arrB&#x5217;&#x6570;&#x7EC4;&#x8981;&#x53F3;&#x79FB;</span></span><br><span class="line">            }</span><br><span class="line">            System.out.println(<span class="string">&quot;in matrixPuls() : resultRow[&quot;</span>+k+<span class="string">&quot;] = &quot;</span>+resultRow[k]);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x5B8C;&#x6210;resultRow&#x7684;&#x6570;&#x636E;&#x586B;&#x5145;</span></span><br><span class="line">        <span class="comment">//&#x5C06;resultRow&#x7684;&#x6570;&#x636E;&#x52A0;&#x8FDB;arrResult[i]&#x884C;&#x4E2D;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; p; j++) { <span class="comment">//arrResult&#x5217;</span></span><br><span class="line">            arrResult[i][j] = resultRow[j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x540C;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x628A;&#x4EE5;&#x4E0B;&#x6570;&#x636E;&#x4F20;&#x5165;:</p>
<blockquote>
<p>int arrA[][] = {{1,3,5},{7,9,11},{13,15,17}};
int arrB[][] = {{2,4,6},{8,10,12},{14,16,18}};
int arrResult[][] = new int[3][3];</p>
</blockquote>
<p>&#x6253;&#x5370;&#x7ED3;&#x679C;&#xFF1A;
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x77E9;&#x9635;<span class="string">A:</span></span><br><span class="line"><span class="number">1</span> 		<span class="number">3</span> 		<span class="number">5</span> 		</span><br><span class="line"><span class="number">7</span> 		<span class="number">9</span> 		<span class="number">11</span> 		</span><br><span class="line"><span class="number">13</span> 		<span class="number">15</span> 		<span class="number">17</span> 		</span><br><span class="line">&#x77E9;&#x9635;<span class="string">B:</span></span><br><span class="line"><span class="number">2</span> 		<span class="number">4</span> 		<span class="number">6</span> 		</span><br><span class="line"><span class="number">8</span> 		<span class="number">10</span> 		<span class="number">12</span> 		</span><br><span class="line"><span class="number">14</span> 		<span class="number">16</span> 		<span class="number">18</span> 		</span><br><span class="line">&#x7ED3;&#x679C;:</span><br><span class="line"><span class="number">96</span> 			<span class="number">114</span> 		<span class="number">132</span> 		</span><br><span class="line"><span class="number">240</span> 		<span class="number">294</span> 		<span class="number">348</span> 		</span><br><span class="line"><span class="number">384</span> 		<span class="number">474</span> 		<span class="number">564</span></span><br></pre></td></tr></table></figure></p>
<h3>&#x8F6C;&#x7F6E;&#x77E9;&#x9635;</h3>
<p>&#x2003;&#x2003;&#x8FD9;&#x4E2A;&#x5C31;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x5C31;&#x662F;$a_{ij}$&#x548C;$a_{ji}$&#x4EA4;&#x6362;&#x4F4D;&#x7F6E;&#xFF0C;&#x76F4;&#x63A5;&#x4E0A;&#x4EE3;&#x7801;&#xFF1A;
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * &#x77E9;&#x9635;&#x5012;&#x7F6E;</span><br><span class="line"> * <span class="doctag">@param</span> previewArr &#x5012;&#x7F6E;&#x524D; m*n</span><br><span class="line"> * <span class="doctag">@param</span> invertedArr &#x5012;&#x7F6E;&#x540E; n*m</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">void</span> <span class="title">matrixInvert</span><span class="params">(<span class="keyword">int</span> previewArr[][],<span class="keyword">int</span> invertedArr[][])</span></span>{</span><br><span class="line"> <span class="keyword">if</span> (previewArr == <span class="keyword">null</span> || invertedArr == <span class="keyword">null</span>){</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">&quot;&#x4F20;&#x9012;&#x975E;&#x6CD5;&#x53C2;&#x6570;&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> m = previewArr.length;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> n = previewArr[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">if</span> (n != invertedArr.length || m != invertedArr[<span class="number">0</span>].length){</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;&#x77E9;&#x9635;&#x975E;&#x6CD5;&#x5012;&#x7F6E;&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) {</span><br><span class="line">            invertedArr[j][i] = previewArr[i][j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x5C06;arrA[][] = {{1,3,5},{7,9,11},{13,15,17}}&#x5E26;&#x5165;&#x7684;
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x77E9;&#x9635;<span class="keyword">A</span>:</span><br><span class="line"><span class="number">1</span> 		<span class="number">3</span> 		<span class="number">5</span> 		</span><br><span class="line"><span class="number">7</span> 		<span class="number">9</span> 		<span class="number">11</span> 		</span><br><span class="line"><span class="number">13</span> 		<span class="number">15</span> 		<span class="number">17</span> 		</span><br><span class="line">&#x7ED3;&#x679C;:</span><br><span class="line"><span class="number">1</span> 		<span class="number">7</span> 		<span class="number">13</span> 		</span><br><span class="line"><span class="number">3</span> 		<span class="number">9</span> 		<span class="number">15</span> 		</span><br><span class="line"><span class="number">5</span> 		<span class="number">11</span> 		<span class="number">17</span></span><br></pre></td></tr></table></figure></p>
<h3>&#x538B;&#x7F29;&#x7A00;&#x758F;&#x77E9;&#x9635;</h3>
<p>&#x2003;&#x2003;&#x6240;&#x8C13;&#x7A00;&#x758F;&#x77E9;&#x9635;&#xFF0C;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x77E9;&#x9635;&#x4E2D;&#x5927;&#x90E8;&#x5206;&#x7684;&#x5143;&#x7D20;&#x90FD;&#x4E3A;0&#x3002;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x7A00;&#x758F;&#x77E9;&#x9635;&#xFF0C;&#x5C06;&#x9020;&#x6210;&#x5185;&#x5B58;&#x7684;&#x6D6A;&#x8D39;&#xFF0C;&#x800C;&#x8FD9;&#x4E9B;&#x6D6A;&#x8D39;&#x6211;&#x4EEC;&#x662F;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x7684;&#xFF0C;&#x5BF9;&#xFF0C;&#x5C31;&#x662F;&#x7528;&#x538B;&#x7F29;&#x7A00;&#x758F;&#x77E9;&#x9635;&#x7684;&#x65B9;&#x6CD5;&#x3002;
&#x5373;&#x5C06;&#x77E9;&#x9635;$\begin{bmatrix}1&amp;0&amp;0&amp;3&amp;0&amp;0&amp;0\\0&amp;0&amp;9&amp;0&amp;0&amp; 11&amp;0\\13&amp;0&amp;0&amp;0&amp;0&amp;0&amp;15\\0&amp;0&amp;0&amp;0&amp;0&amp;0&amp;0\\0&amp;0&amp;7&amp;0&amp;0&amp;0&amp;0\end{bmatrix}_{5*7}$&#x538B;&#x7F29;&#x4E3A;&#x5F62;&#x5982;$\begin{bmatrix}5&amp;7&amp;7\\1&amp;1&amp;1\\1&amp;4&amp;3\\2&amp;3&amp;9\\2&amp;6&amp;11\\3&amp;1&amp;13\\3&amp;7&amp;15\\5&amp;3&amp;7\end{bmatrix}_{8*3}$&#x7684;&#x77E9;&#x9635;&#x3002;
&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528;&#x8868;&#x683C;&#x6765;&#x5F62;&#x5BB9;&#x538B;&#x7F29;&#x540E;&#x7684;&#x77E9;&#x9635;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x7684;&#x5143;&#x7D20;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#x7684;&#x542B;&#x4E49;&#x5206;&#x522B;&#x662F;&#x539F;&#x77E9;&#x9635;&#x7684;&#x884C;&#x6570;&#x3001;&#x539F;&#x77E9;&#x9635;&#x7684;&#x5217;&#x6570;&#x3001;&#x539F;&#x77E9;&#x9635;&#x4E0D;&#x4E3A;0&#x5143;&#x7D20;&#x7684;&#x603B;&#x4E2A;&#x6570;&#xFF1B;&#x4ECE;&#x7B2C;&#x4E8C;&#x884C;&#x5F00;&#x59CB;&#x4EE5;&#x540E;&#xFF0C;&#x6BCF;&#x4E00;&#x884C;&#x7684;&#x542B;&#x4E49;&#x662F;&#xFF1A;&#x539F;&#x77E9;&#x9635;&#x7684;&#x7B2C;i&#x884C;&#x7B2C;j&#x5217;&#x7684;&#x5143;&#x7D20;&#x4E3A;k&#x3002;</p>
<table>
<thead>
<tr>
<th style="text-align:center">&#x884C;</th>
<th style="text-align:center">&#x5217;</th>
<th style="text-align:center">&#x503C;</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">7</td>
<td style="text-align:center">7</td>
</tr>
<tr>
<td style="text-align:center">i1</td>
<td style="text-align:center">j1</td>
<td style="text-align:center">k1</td>
</tr>
<tr>
<td style="text-align:center">i2</td>
<td style="text-align:center">j2</td>
<td style="text-align:center">k2</td>
</tr>
</tbody>
</table>
<p>&#x5B9E;&#x73B0;&#x8D77;&#x6765;&#x4E5F;&#x4E0D;&#x96BE;&#xFF1A;
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * &#x538B;&#x7F29;&#x7A00;&#x758F;&#x77E9;&#x9635;</span><br><span class="line"> * &#x5C06;&#x5927;&#x578B;&#x7684;sparseArr&#x77E9;&#x9635;&#x538B;&#x7F29;&#x4E3A;&#x5C0F;&#x578B;&#x7684;p*3&#x77E9;&#x9635;compressArr</span><br><span class="line"> * @param sparseArr m*n</span><br><span class="line"> * @return</span><br><span class="line"> * &#x538B;&#x7F29;&#x540E;&#x7684;&#x77E9;&#x9635;ompressArr</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[][] matrixSparse(<span class="keyword">int</span> sparseArr[][]) {</span><br><span class="line">    <span class="keyword">if</span> (sparseArr == <span class="keyword">null</span>){</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">&quot;&#x4F20;&#x9012;&#x975E;&#x6CD5;&#x53C2;&#x6570;&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> row = sparseArr.length;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> col = sparseArr[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">int</span> temp[][] = <span class="keyword">new</span> <span class="keyword">int</span>[row*col][<span class="number">3</span>];<span class="comment">//row*col&#x4EE5;&#x9632;&#x4E0D;&#x591F;</span></span><br><span class="line">    <span class="keyword">int</span> compressArr[][] = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">int</span> <span class="keyword">sum</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//&#x904D;&#x5386;sparseArr&#x5E76;&#x538B;&#x7F29;&#x81F3;temp</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; row; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; col; j++) {</span><br><span class="line">            <span class="comment">//&#x7A7A;&#x51FA;temp&#x7B2C;&#x4E00;&#x884C;&#x6765;&#x5B58;&#x653E;&#x538B;&#x7F29;&#x524D;&#x77E9;&#x9635;&#x7684;&#x4FE1;&#x606F;</span></span><br><span class="line">            <span class="keyword">int</span> value = sparseArr[i][j];</span><br><span class="line">            <span class="keyword">if</span> (value != <span class="number">0</span>){</span><br><span class="line">                ++<span class="keyword">sum</span>;</span><br><span class="line">                temp[<span class="keyword">sum</span>][<span class="number">0</span>] = i+<span class="number">1</span>;</span><br><span class="line">                temp[<span class="keyword">sum</span>][<span class="number">1</span>] = j+<span class="number">1</span>;</span><br><span class="line">                temp[<span class="keyword">sum</span>][<span class="number">2</span>] = value;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    temp[<span class="number">0</span>][<span class="number">0</span>] = row;</span><br><span class="line">    temp[<span class="number">0</span>][<span class="number">1</span>] = col;</span><br><span class="line">    temp[<span class="number">0</span>][<span class="number">2</span>] = <span class="keyword">sum</span>;</span><br><span class="line">    compressArr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="keyword">sum</span>+<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="keyword">sum</span>; i++) {</span><br><span class="line">        compressArr[i][<span class="number">0</span>] = temp[i][<span class="number">0</span>];</span><br><span class="line">        compressArr[i][<span class="number">1</span>] = temp[i][<span class="number">1</span>];</span><br><span class="line">        compressArr[i][<span class="number">2</span>] = temp[i][<span class="number">2</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> compressArr;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x4F20;&#x5165;&#x77E9;&#x9635;</p>
<blockquote>
<p>final int sparseArr[][] = {
{0,0,0,0,0,3,0,0,5,0,0},
{0,0,0,1,0,0,0,0,0,0,0},
{0,0,0,0,0,0,8,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0},
{% raw %}{0,9,0,0,0,0,0,0,5,0,0}{% endraw %},
{0,0,0,0,2,0,0,0,0,7,0}};</p>
</blockquote>
<p>&#x6253;&#x5370;&#x7ED3;&#x679C;&#xFF1A;
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">sparseArr:</span></span><br><span class="line"><span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">3</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">5</span> 		<span class="number">0</span> 		<span class="number">0</span> 		</span><br><span class="line"><span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">1</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		</span><br><span class="line"><span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">8</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		</span><br><span class="line"><span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		</span><br><span class="line"><span class="number">0</span> 		<span class="number">9</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">5</span> 		<span class="number">0</span> 		<span class="number">0</span> 		</span><br><span class="line"><span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">2</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">0</span> 		<span class="number">7</span> 		<span class="number">0</span> 		</span><br><span class="line"><span class="symbol">result:</span></span><br><span class="line"><span class="number">6</span> 		<span class="number">11</span> 		<span class="number">8</span> 		</span><br><span class="line"><span class="number">1</span> 		<span class="number">6</span> 		<span class="number">3</span> 		</span><br><span class="line"><span class="number">1</span> 		<span class="number">9</span> 		<span class="number">5</span> 		</span><br><span class="line"><span class="number">2</span> 		<span class="number">4</span> 		<span class="number">1</span> 		</span><br><span class="line"><span class="number">3</span> 		<span class="number">7</span> 		<span class="number">8</span> 		</span><br><span class="line"><span class="number">5</span> 		<span class="number">2</span> 		<span class="number">9</span> 		</span><br><span class="line"><span class="number">5</span> 		<span class="number">9</span> 		<span class="number">5</span> 		</span><br><span class="line"><span class="number">6</span> 		<span class="number">5</span> 		<span class="number">2</span> 		</span><br><span class="line"><span class="number">6</span> 		<span class="number">10</span> 		<span class="number">7</span></span><br></pre></td></tr></table></figure></p>
<h3>&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x6709;&#x4E0A;/&#x4E0B;&#x4E09;&#x89D2;&#x77E9;&#x9635;</h3>
<p>&#x2003;&#x2003;&#x4E0A;/&#x4E0B;&#x4E09;&#x89D2;&#x77E9;&#x9635;&#x6709;&#x5DE6;&#x4E0A;&#x4E09;&#x89D2;&#x77E9;&#x9635;&#x3001;&#x53F3;&#x4E0A;&#x4E09;&#x89D2;&#x77E9;&#x9635;&#x3001;&#x5DE6;&#x4E0B;&#x4E09;&#x89D2;&#x77E9;&#x9635;&#x3001;&#x53F3;&#x4E0B;&#x4E09;&#x89D2;&#x77E9;&#x9635;&#xFF0C;&#x5728;&#x6B64;&#x5C31;&#x4EE5;&#x53F3;&#x4E0A;&#x4E09;&#x89D2;&#x77E9;&#x9635;&#x4E3A;&#x4F8B;&#x8FDB;&#x884C;&#x5206;&#x6790;&#x3002;
&#x2003;&#x2003;&#x53F3;&#x4E0A;&#x4E09;&#x89D2;&#x77E9;&#x9635;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5927;&#x5C0F;&#x4E3A;n*n&#x77E9;&#x9635;A&#x7684;&#x5BF9;&#x89D2;&#x7EBF;(0,0)--(n,n)&#x4E0B;&#x65B9;&#x7684;&#x5143;&#x7D20;&#x5168;&#x4E3A;0&#x3002;&#x4E5F;&#x5C31;&#x662F;&#xFF1A;
$\begin{bmatrix}a_{11}&amp;a_{12}&amp;\cdots&amp;a_{n1}\\0&amp;a_{22}&amp;\cdots&amp;a_{n2}\\\vdots&amp;\ddots&amp;\ddots&amp;\vdots\\0&amp;\cdots&amp;0&amp;a_{nn}\end{bmatrix}_{n*n}$</p>
<ul>
<li>A(i,j)$\left\{\begin{matrix}A(i,j)=0&amp;i&gt;j\\A(i,j)=a_{ij}&amp;i&lt;=j\end{matrix}\right.$</li>
<li>&#x5171;&#x6709;1+2+...+n=$\frac{n*(n+1)}{2}$&#x4E2A;&#x975E;&#x96F6;&#x5143;&#x7D20;</li>
</ul>
<p>&#x2003;&#x2003;&#x6B64;&#x65F6;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528;&#x538B;&#x7F29;&#x7A00;&#x758F;&#x77E9;&#x9635;&#x7684;&#x65B9;&#x6CD5;&#x6216;&#x76F4;&#x63A5;&#x7528;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x4FDD;&#x5B58;&#x8FD9;&#x77E9;&#x9635;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x662F;&#x603B;&#x611F;&#x89C9;&#x6709;&#x70B9;&#x201C;&#x6740;&#x732A;&#x7528;&#x725B;&#x5200;&#x201D;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x7528;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x4E00;&#x7EF4;&#x6570;&#x7EC4;&#x6765;&#x4FDD;&#x5B58;&#x3002;&#x5148;&#x4FDD;&#x5B58;&#x77E9;&#x9635;&#x7B2C;&#x4E00;&#x884C;&#x6570;&#x636E;&#xFF0C;&#x63A5;&#x7740;&#x4FDD;&#x5B58;&#x7B2C;&#x4E8C;&#x884C;...&#x76F4;&#x5230;&#x4FDD;&#x5B58;&#x5B8C;&#x5168;&#x3002;&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x4F1A;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x6570;&#x5B57;B[$\frac{n*(n+1)}{2}$]&#x3002;
&#x2003;&#x2003;&#x6211;&#x4EEC;&#x5047;&#x8BBE;$a_{ij}$&#x5728;&#x6570;&#x7EC4;B&#x7684;k&#x4F4D;&#x7F6E;&#xFF0C;&#x5373;B[k]&#x4E2D;&#x3002;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5F88;&#x5BB9;&#x6613;&#x53D1;&#x73B0;&#xFF1A;k=n*(i-1)-$\frac{i*(i-1)}{2}$+j&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x662F;&#x4E00;&#x5217;&#x4E00;&#x5217;&#x4FDD;&#x5B58;&#x8FDB;&#x6570;&#x7EC4;B&#x4E2D;&#x7684;&#x8BDD;&#xFF0C;k=$\frac{j*(j-1)}{2}$+i&#x3002;&#x6240;&#x4EE5;&#x5BF9;&#x4E8E;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;$a_{ij}$&#xFF0C;&#x6211;&#x4EEC;&#x90FD;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;B[k]&#x3002;&#x76F8;&#x5173;&#x4EE3;&#x7801;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x7565;&#x4E86;&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://shicaid.github.io/2016/05/31/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2>Quick Start</h2>
<h3>Create a new post</h3>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></p>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3>Run server</h3>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></p>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3>Generate static files</h3>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></p>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3>Deploy to remote sites</h3>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></p>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
